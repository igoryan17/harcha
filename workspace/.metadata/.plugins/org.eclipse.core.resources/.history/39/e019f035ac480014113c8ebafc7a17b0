/*
 * 30sept_file.c
 *
 *  Created on: 30.09.2014
 *      Author: nikita
 */
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <fcntl.h>
#include <assert.h>
int main(int argc, char *argv[])
{
	int pipefd[2];
	pid_t cpid;
	char buf;

	assert(argc == 2);

	  if (pipe(pipefd) == -1)
	  	  {
	               perror("pipe");
	               exit(EXIT_FAILURE);
	  	  }

	  if (cpid == 0) {    /* Child reads from pipe */
          close(pipefd[1]);          /* Close unused write end */

      while (read(pipefd[0], &buf, 1) > 0)
              write(STDOUT_FILENO, &buf, 1);

          write(STDOUT_FILENO, "\n", 1);
          close(pipefd[0]);
          _exit(EXIT_SUCCESS);

      	  	  	  	  }
      else {            /* Parent writes argv[1] to pipe */
          close(pipefd[0]);          /* Close unused read end */
          write(pipefd[1], argv[1], strlen(argv[1]));
          close(pipefd[1]);          /* Reader will see EOF */
          wait(NULL);                /* Wait for child */
          exit(EXIT_SUCCESS);
      	  	  }

		//pipe (pipefd);
		//cpid = fork();
	//return 0;
}


